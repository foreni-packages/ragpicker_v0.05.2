# Copyright (C) 2013 Ragpicker Developers.
# This file is part of Ragpicker Malware Crawler - http://code.google.com/p/malware-crawler/

import logging
import json
import urllib
import urllib2
from utils.multiPartForm import MultiPartForm
from core.abstracts import Processing

try:
    from yapsy.IPlugin import IPlugin
except ImportError:
    raise ImportError, 'Yapsy (Yet Another Plugin System) is required to run this program : http://yapsy.sourceforge.net'

log = logging.getLogger("ProcessingMalwareLu")

MALWARE_LU_URL_CHECK = "https://www.malware.lu/api/check"
MALWARE_LU_URL_UPLOAD = "https://www.malware.lu/api/upload"

class MalwareLu(IPlugin, Processing):
    
    def run(self, objfile):
        self.key = "MalwareLu"
        self.score = -1
        self.apikey = self.options.get("apikey", None)
        result = {}
        
        if not self.apikey:
            raise Exception("malware.lu API key not configured, skip")

        #Check md5-hash on malware.lu
        check = self._check(objfile.get_fileMd5())
        
        if check['status'] == True:
            result["response_code"] = "%s is in malware.lu database" % objfile.get_fileMd5()
            self.score = 10
        else:
            result["response_code"] = "%s NOT in malware.lu database" % objfile.get_fileMd5()
            log.info("%s NOT in malware.lu database" % objfile.get_fileMd5())
            #Upload file to malware.lu
            upload = self._upload(objfile)
            if upload:
                result["upload"] = upload

        return result
    
    def _upload(self, objfile):
        upload = self.options.get("upload", None)
        
        if not upload or not objfile.is_permittedType():
            #No Upload, skip
            return None
        
        log.info("Upload file: %s" % objfile.get_fileMd5())
        
        file_extension = '.' + objfile.file_extension()
        fileName = objfile.get_fileMd5() + file_extension
        rawFile = open(objfile.temp_file, 'rb')        
        
        try:
            form = MultiPartForm()
            form.add_file('file', fileName, fileHandle=rawFile)
            form.add_field('apikey', self.apikey)
            
            request = urllib2.Request(MALWARE_LU_URL_UPLOAD)
            request.add_header('User-agent', 'Ragpicker')
            body = str(form)
            request.add_header('Content-type', form.get_content_type())
            request.add_header('Content-length', len(body))
            request.add_data(body)
            
            response_data = urllib2.urlopen(request).read()
            reponsejson = json.loads(response_data)
        except urllib2.URLError as e:
            raise Exception("Unable to establish connection to malware.lu: %s" % e)
        except urllib2.HTTPError as e:
            raise Exception("Unable to perform HTTP request to malware.lu (http code=%s)" % e) 
        except ValueError as e:
            raise Exception("Unable to convert response to JSON: %s" % e)
    
        return reponsejson
    
    def _check(self, md5):
        param = { 'hash': md5, 'apikey': self.apikey }
        data = urllib.urlencode(param)
        
        try:
            request = urllib2.Request(MALWARE_LU_URL_CHECK, data)
            response = urllib2.urlopen(request)
            response_data = response.read()
            check = json.loads(response_data)
        except urllib2.URLError as e:
            raise Exception("Unable to establish connection to malware.lu: %s" % e)
        except urllib2.HTTPError as e:
            raise Exception("Unable to perform HTTP request to malware.lu (http code=%s)" % e)        
        except ValueError as e:
            raise Exception("Unable to convert response to JSON: %s" % e)

        return check